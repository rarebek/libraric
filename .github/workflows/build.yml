# cross-platform wails build workflow

name: wails build

on:
  push:
    tags:
      - 'v*' # run on every version tag

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - os: ubuntu-latest
            platform: linux/amd64
            artifact_name: libraric-linux
          - os: windows-latest
            platform: windows/amd64
            artifact_name: libraric-windows
          - os: macos-latest
            platform: darwin/universal
            artifact_name: libraric-macos

    runs-on: ${{ matrix.build.os }}
    env:
      node_options: '--max-old-space-size=4096'

    steps:
      - name: checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: setup node and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: setup pnpm via corepack
        run: |
          corepack enable
          corepack prepare pnpm@8 --activate

      # build with wails build action
      - name: build wails app
        uses: dAppServer/wails-build-action@main
        with:
          build-name: libraric
          build-platform: ${{ matrix.build.platform }}
          go-version: '1.22'
          package: false

      # archive into single zip per platform
      - name: create zip archive (non-windows)
        if: runner.os != 'Windows'
        run: |
          zip -r ${{ matrix.build.artifact_name }}.zip build/bin
        shell: bash

      - name: create zip archive (windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path build\bin\* -DestinationPath ${{ matrix.build.artifact_name }}.zip -Force

      # upload zip artifact
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.artifact_name }}
          path: ${{ matrix.build.artifact_name }}.zip

      # attach zip to release
      - name: upload to github release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.build.artifact_name }}.zip
          generate_release_notes: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
